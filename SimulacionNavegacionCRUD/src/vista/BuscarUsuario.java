/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.LayoutStyle;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NODELI
 */
public class BuscarUsuario extends javax.swing.JFrame {

    /**
     * Creates new form BuscarUsuario
     */
    public BuscarUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscarUsuario().setVisible(true);
            }
        });
    }

    static final class MainFrame {//GEN-BEGIN:variables

        (ERROR);
        (ERROR);
        (ERROR);
        (ERROR);
        (ERROR);

        /**
         *
         * @author NODELI
         */
        public class MainFrame extends JFrame {

            private JButton btnIngresar;
            private JButton btnBuscar;
            private JButton btnModificar;
            private JButton btnEliminar;
            private JButton btnActualizar;
            private JButton btnListado;
            private List<Usuario> usuarios;

            /**
             * Creates new form MainFrame
             */
            public MainFrame() {
                usuarios = new ArrayList<>(); // Lista de usuarios
                initComponents();
            }

            /**
             * This method is called from within the constructor to initialize the form.
             * WARNING: Do NOT modify this code. The content of this method is always
             * regenerated by the Form Editor.
             */
            @SuppressWarnings(value = "unchecked")
            private void initComponents() {
                btnIngresar = new JButton();
                btnDato = new JButton();
                btnBuscar = new JButton();
                btnModificar = new JButton();
                btnEliminar = new JButton();
                btnActualizar = new JButton();
                btnListado = new JButton();
                jScrollPane1 = new JScrollPane();
                jTable1 = new JTable();
                setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                btnIngresar.setText("INGRESA USUARIO");
                btnIngresar.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        btnIngresarActionPerformed(evt);
                    }
                });
                btnDato.setText("PONER DATO");
                btnBuscar.setText("BUSCAR USUARIO");
                btnBuscar.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        btnBuscarActionPerformed(evt);
                    }
                });
                btnModificar.setText("MODIFICAR USUARIO");
                btnModificar.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        btnModificarActionPerformed(evt);
                    }
                });
                btnEliminar.setText("ELIMINAR USUARIO");
                btnEliminar.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        btnEliminarActionPerformed(evt);
                    }
                });
                btnActualizar.setText("ACTUALIZAR USUARIO");
                btnActualizar.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        btnActualizarActionPerformed(evt);
                    }
                });
                btnListado.setText("LISTADO DE USUARIOS");
                btnListado.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent evt) {
                        btnListadoActionPerformed(evt);
                    }
                });
                jTable1.setModel(new DefaultTableModel(new Object[][]{{null, null, null}, {null, null, null}, {null, null, null}, {null, null, null}}, new String[]{"ID", "NOMBRE", "CORREO"}));
                jScrollPane1.setViewportView(jTable1);
                GroupLayout layout = new GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(66, 66, 66).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(btnIngresar).addComponent(btnBuscar).addGroup(layout.createSequentialGroup().addGap(6, 6, 6).addComponent(btnDato)))).addGroup(layout.createSequentialGroup().addGap(37, 37, 37).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(btnEliminar).addComponent(btnModificar))).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(btnListado).addComponent(btnActualizar))).addGroup(layout.createSequentialGroup().addGap(98, 98, 98).addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 375, GroupLayout.PREFERRED_SIZE))).addContainerGap(111, Short.MAX_VALUE)));
                layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(21, 21, 21).addComponent(btnIngresar).addGap(7, 7, 7).addComponent(btnDato).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnBuscar).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnModificar).addGap(18, 18, 18).addComponent(btnEliminar).addGap(18, 18, 18).addComponent(btnActualizar).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnListado).addGap(18, 18, 18).addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 268, GroupLayout.PREFERRED_SIZE).addContainerGap(16, Short.MAX_VALUE)));
                pack();
            } // </editor-fold>

            private void btnIngresarActionPerformed(ActionEvent evt) {
                String nombre = JOptionPane.showInputDialog("Ingrese el nombre del usuario:");
                String rol = JOptionPane.showInputDialog("Ingrese el rol del usuario:");
                if (nombre != null && rol != null && !nombre.isEmpty() && !rol.isEmpty()) {
                    usuarios.add(new Usuario(nombre, rol));
                    JOptionPane.showMessageDialog(this, "Usuario agregado exitosamente.");
                } else {
                    JOptionPane.showMessageDialog(this, "Datos inv\u00e1lidos.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

            private void btnBuscarActionPerformed(ActionEvent evt) {
                String nombre = JOptionPane.showInputDialog("Ingrese el nombre del usuario a buscar:");
                if (nombre != null && !nombre.isEmpty()) {
                    Usuario usuario = usuarios.stream().filter(u -> u.getNombre().equalsIgnoreCase(nombre)).findFirst().orElse(null);
                    if (usuario != null) {
                        JOptionPane.showMessageDialog(this, "Usuario encontrado:\n" + usuario);
                    } else {
                        JOptionPane.showMessageDialog(this, "Usuario no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

            private void btnModificarActionPerformed(ActionEvent evt) {
                String nombre = JOptionPane.showInputDialog("Ingrese el nombre del usuario a modificar:");
                if (nombre != null && !nombre.isEmpty()) {
                    Usuario usuario = usuarios.stream().filter(u -> u.getNombre().equalsIgnoreCase(nombre)).findFirst().orElse(null);
                    if (usuario != null) {
                        String nuevoRol = JOptionPane.showInputDialog("Ingrese el nuevo rol del usuario:");
                        if (nuevoRol != null && !nuevoRol.isEmpty()) {
                            usuario.setRol(nuevoRol);
                            JOptionPane.showMessageDialog(this, "Usuario modificado exitosamente.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Usuario no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

            private void btnEliminarActionPerformed(ActionEvent evt) {
                String nombre = JOptionPane.showInputDialog("Ingrese el nombre del usuario a eliminar:");
                if (nombre != null && !nombre.isEmpty()) {
                    boolean eliminado = usuarios.removeIf(u -> u.getNombre().equalsIgnoreCase(nombre));
                    if (eliminado) {
                        JOptionPane.showMessageDialog(this, "Usuario eliminado exitosamente.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Usuario no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

            private void btnActualizarActionPerformed(ActionEvent evt) {
                modificar();
            }

            private void btnListadoActionPerformed(ActionEvent evt) {
                if (usuarios.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No hay usuarios registrados.");
                } else {
                    StringBuilder lista = new StringBuilder("Usuarios registrados:\n");
                    usuarios.forEach(u -> lista.append(u).append("\n"));
                    JOptionPane.showMessageDialog(this, lista.toString());
                }
            }

            /**
             * @param args the command line arguments
             */
            public static void main(String[] args) {
                SwingUtilities.invokeLater(() -> new MainFrame().setVisible(true));
            }

            static class Usuario {

                private String nombre;
                private String rol;

                public Usuario(String nombre, String rol) {
                    this.nombre = nombre;
                    this.rol = rol;
                }

                public String getNombre() {
                    return nombre;
                }

                public void setRol(String rol) {
                    this.rol = rol;
                }

                @Override
                public String toString() {
                    return "Nombre: " + nombre + ", Rol: " + rol;
                }
            }
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            (ERROR) ;
            {
                for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            }
            (ERROR) ;
            ClassNotFoundException ex;
            {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            (ERROR) ;
            InstantiationException ex;
            {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            (ERROR) ;
            IllegalAccessException ex;
            {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            (ERROR) ;
            UnsupportedLookAndFeelException ex;
            {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            //</editor-fold>

            /* Create and display the form */
            EventQueue.invokeLater <error>((ERROR) ) {
                (ERROR);
            }

            public void run() {
                new MainFrame().setVisible(true);
            }
        }
        (ERROR);
        (ERROR);
        private JButton btnBuscar;
        private JButton btnDato;
        private JButton btnEliminar;
        private JButton btnIngresar;
        private JButton btnListado;
        private JButton btnModificar;
        private JScrollPane jScrollPane1;
        private JTable jTable1;
        // End of variables declaration
        (ERROR);
    }

    // Variables declaration - do not modify                     
    // End of variables declaration//GEN-END:variables
}
